apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'


android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.natasaandzic.hydratabletopgames"
        minSdkVersion 22
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    compile 'com.google.android.gms:play-services:10.2.1'
    compile 'com.google.firebase:firebase-messaging:10.2.1'
    compile 'com.google.firebase:firebase-core'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api 'com.android.support:design:27.1.1'
    api 'com.squareup.okhttp:okhttp:2.4.0'
    api 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    api 'com.facebook.fresco:drawee:0.5.0+'
    api 'com.facebook.fresco:imagepipeline-okhttp:0.5.0+'

    implementation 'com.android.support:recyclerview-v7:27.0.0'


}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.google.android') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '10.2.1'
            }
        }

    }
}


configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
            }
        }

    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.google.firebase') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '10.2.1'
            }
        }

    }
}
